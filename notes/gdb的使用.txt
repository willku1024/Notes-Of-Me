gdb 的 用法

一、 环境
vim .bashrc
ulimit -c unlimited //启用core

二、makefile 启用gdb
.SUFFIXES: .cpp .o

CC=g++


SRCS=main.c \
		work.cpp

OBJS=$(SRCS:.cpp=.o)
EXEC=myexec

all: $(OBJS)
	$(CC) -o $(EXEC) $(OBJS)
	@echo '-------------ok--------------'

.cpp.o:
	$(CC) -Wall -g -o $@ -c $<

clean:
	rm -f $(OBJS)
	rm -f core*
	
三、gdb调试
1、gdb myexec core.xxxx (debug segment error)
2、gdb -q myexec  (quiet mode)
   gdb>run
   
   gdb>where  (error in which line)
   gdb>list [m,n]  (error in which section)
   
   gdb>print i  (print variable or express)
   gdb>print 'filename'::express
   gdb>print funcname::express 
   
   gdb>whatis i  (show type of variable)
   
   gdb>break linenumber
   gdb>break funcname  
   gdb>break filename:funcname
   gdb>break filename:linenumber
   gdb>continue (go on)
   gdb>info break
   gdb>delete breaknumber
   gdb>set variable varname = newvalue
   
   
   gdb>step
   gdb>next
   gdb>return [value]